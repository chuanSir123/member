<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinqushi.mapper.SummaryMapper" >
  <resultMap id="BaseResultMap" type="com.xinqushi.entity.Summary" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mid" property="mid" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="aid" property="aid" jdbcType="INTEGER" />
    <result column="ischeck" property="ischeck" jdbcType="BIT" />
    <result column="eid" property="eid" jdbcType="INTEGER" />
    <result column="remind" property="remind" jdbcType="INTEGER" />
    <result column="recommend" property="recommend" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xinqushi.entity.Summary" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mid, pid, time, title, aid, ischeck, eid, remind, recommend, cid
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xinqushi.entity.SummaryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from summary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xinqushi.entity.SummaryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from summary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from summary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from summary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinqushi.entity.SummaryExample" >
    delete from summary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinqushi.entity.Summary" >
    insert into summary (id, mid, pid, 
      time, title, aid, ischeck, 
      eid, remind, recommend, 
      cid, content)
    values (#{id,jdbcType=INTEGER}, #{mid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, 
      #{time,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{aid,jdbcType=INTEGER}, #{ischeck,jdbcType=BIT}, 
      #{eid,jdbcType=INTEGER}, #{remind,jdbcType=INTEGER}, #{recommend,jdbcType=INTEGER}, 
      #{cid,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xinqushi.entity.Summary" >
    insert into summary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="aid != null" >
        aid,
      </if>
      <if test="ischeck != null" >
        ischeck,
      </if>
      <if test="eid != null" >
        eid,
      </if>
      <if test="remind != null" >
        remind,
      </if>
      <if test="recommend != null" >
        recommend,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="ischeck != null" >
        #{ischeck,jdbcType=BIT},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="remind != null" >
        #{remind,jdbcType=INTEGER},
      </if>
      <if test="recommend != null" >
        #{recommend,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinqushi.entity.SummaryExample" resultType="java.lang.Integer" >
    select count(*) from summary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update summary
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mid != null" >
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.aid != null" >
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.ischeck != null" >
        ischeck = #{record.ischeck,jdbcType=BIT},
      </if>
      <if test="record.eid != null" >
        eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.remind != null" >
        remind = #{record.remind,jdbcType=INTEGER},
      </if>
      <if test="record.recommend != null" >
        recommend = #{record.recommend,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update summary
    set id = #{record.id,jdbcType=INTEGER},
      mid = #{record.mid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      time = #{record.time,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      aid = #{record.aid,jdbcType=INTEGER},
      ischeck = #{record.ischeck,jdbcType=BIT},
      eid = #{record.eid,jdbcType=INTEGER},
      remind = #{record.remind,jdbcType=INTEGER},
      recommend = #{record.recommend,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update summary
    set id = #{record.id,jdbcType=INTEGER},
      mid = #{record.mid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      time = #{record.time,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      aid = #{record.aid,jdbcType=INTEGER},
      ischeck = #{record.ischeck,jdbcType=BIT},
      eid = #{record.eid,jdbcType=INTEGER},
      remind = #{record.remind,jdbcType=INTEGER},
      recommend = #{record.recommend,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinqushi.entity.Summary" >
    update summary
    <set >
      <if test="mid != null" >
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="aid != null" >
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="ischeck != null" >
        ischeck = #{ischeck,jdbcType=BIT},
      </if>
      <if test="eid != null" >
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="remind != null" >
        remind = #{remind,jdbcType=INTEGER},
      </if>
      <if test="recommend != null" >
        recommend = #{recommend,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xinqushi.entity.Summary" >
    update summary
    set mid = #{mid,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      aid = #{aid,jdbcType=INTEGER},
      ischeck = #{ischeck,jdbcType=BIT},
      eid = #{eid,jdbcType=INTEGER},
      remind = #{remind,jdbcType=INTEGER},
      recommend = #{recommend,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinqushi.entity.Summary" >
    update summary
    set mid = #{mid,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      aid = #{aid,jdbcType=INTEGER},
      ischeck = #{ischeck,jdbcType=BIT},
      eid = #{eid,jdbcType=INTEGER},
      remind = #{remind,jdbcType=INTEGER},
      recommend = #{recommend,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>